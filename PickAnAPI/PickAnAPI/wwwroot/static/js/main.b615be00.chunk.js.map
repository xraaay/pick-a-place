{"version":3,"sources":["actions/index.js","components/SettingsForm.js","layout/Nav.js","layout/Homepage.js","components/Register.js","components/Login.js","services/userService.js","services/settingsService.js","components/ViewSettings.js","services/yelpService.js","services/resuseableFunctions.js","components/YelpCard.js","components/WaitList.js","components/RollTheDice.js","components/WouldYouRather.js","components/HelpPage.js","layout/ContentRouter.js","components/ActiveSearch.js","layout/Layout.js","layout/CookieCheck.js","reducers/currentUser.js","reducers/search.js","reducers/index.js","App.js","serviceWorker.js","index.js"],"names":["setUser","user","type","SettingsForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","reroute","state","selection","history","push","console","log","checkUseLocation","setState","useLocation","navigator","geolocation","getCurrentPosition","submitBtn","term","location","radius","price","openNow","showModal","inputChange","bind","assertThisInitialized","priceBtn","toggleModal","grabValues","search","data","JSON","parse","currentLocation","e","value","target","checked","defineProperty","name","position","stringify","longitude","coords","latitude","validation","setSearch","error","swal","title","selected","index","indexOf","splice","toConsumableArray","preventDefault","prevState","_this2","react_default","a","createElement","Fragment","href","className","style","buttons","onClick","reactstrap_es","isOpen","toggle","textAlign","onChange","placeholder","disabled","id","label","color","active","includes","React","Component","withRouter","connect","dispatch","Nav","navigate","route","pathname","navbar","zIndex","loggedIn","components_SettingsForm","data-toggle","data-target","aria-controls","aria-expanded","aria-label","currentUser","logout","Homepage","rtd","pointerEvents","backgroundColor","borderColor","Login","username","email","password","login","config","method","axios","userService","then","cookies","get","catch","withCookies","responseSuccessHandler","response","responseErrorHandler","err","scrape","str","shuffleResults","arr","i","length","j","Math","floor","random","_ref","YelpCard","collapse","waitList","scraped","distance","round","result","key","url","height","display","alignItems","overflow","src","image_url","flex","width","react_rating_default","readonly","initialRating","rating","emptySymbol","fullSymbol","is_closed","pill","concat","address1","city","zip_code","display_phone","review_count","categories","map","item","RollTheDice","results","getGeoLocation","prevProps","text","yelpService","limit","open_now","three","businesses","slice","fontWeight","fontSize","lineHeight","react_transition_group","in","appear","timeout","classNames","components_YelpCard","WouldYouRather","toggleCollapse","show","first","second","maxResults","wyr","select","shuffle","arrOne","arrTwo","num","newResult","_this3","showAlert","HelpPage","match","params","ContentRouter","Switch","Route","path","exact","component","Search","ActiveSearch","setting","priceArr","append","repeat","render","toString","Layout","layout_Nav","layout_ContentRouter","CookieCheck","layout_Layout","arguments","undefined","action","objectSpread","appReducer","combineReducers","rootReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","App","es","BrowserRouter","es6","layout_CookieCheck","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b615be00.chunk.js","sourcesContent":["export const setUser = user => ({\r\n    type: 'SET_USER',\r\n    user: user\r\n})\r\n\r\nexport const logoutUser = () => {\r\n    return ({\r\n      type: 'USER_LOGOUT'\r\n    })\r\n}\r\n\r\nexport const setSearch = search => ({\r\n    type: 'SET_SEARCH',\r\n    search: search  \r\n})","import React from 'react';\r\nimport { Form, CustomInput, Label, FormGroup, Input, Button, ButtonGroup, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport { setSearch } from '../actions/index'\r\nimport { withRouter } from 'react-router-dom'\r\nimport swal from 'sweetalert2';\r\n\r\n\r\nclass SettingsForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            term: '',\r\n            location: '',\r\n            radius: 1609,\r\n            price: [],\r\n            openNow: false,\r\n            useLocation: false,\r\n            showModal: false,\r\n            selection: ''\r\n        }\r\n        this.inputChange = this.inputChange.bind(this)\r\n        this.submitBtn = this.submitBtn.bind(this);\r\n        this.priceBtn = this.priceBtn.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.grabValues = this.grabValues.bind(this);\r\n        this.reroute = this.reroute.bind(this)\r\n    }\r\n\r\n    grabValues() {\r\n        let { search } = this.props.data\r\n        this.setState({\r\n            term: search.term,\r\n            location: search.location,\r\n            radius: search.radius,\r\n            price: JSON.parse(search.price),\r\n            openNow: search.openNow,\r\n            useLocation: search.currentLocation\r\n        })\r\n    }\r\n\r\n    inputChange(e) {\r\n        const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\r\n        this.setState({\r\n            [e.target.name]: value\r\n        })\r\n    }\r\n\r\n    submitBtn(position) {\r\n        const data = {\r\n            term: this.state.term,\r\n            radius: this.state.radius,\r\n            price: JSON.stringify(this.state.price),\r\n            openNow: this.state.openNow,\r\n            currentLocation: this.state.useLocation\r\n        }\r\n        if (position) {\r\n            data.longitude = position.coords.longitude\r\n            data.latitude = position.coords.latitude\r\n        } else {\r\n            data.location = this.state.location\r\n        }\r\n        if(this.validation(data)){\r\n            this.props.setSearch(data)\r\n            this.setState({\r\n                showModal: false\r\n            })\r\n            this.reroute()\r\n        }\r\n    }\r\n\r\n    validation(data){\r\n        let price = JSON.parse(data.price);\r\n        let error\r\n        if(!data.term){\r\n            error = \"Term is required\"\r\n        } else if(!data.longitude && !data.location){\r\n            error = \"Location required\"\r\n        } else if(!price[0]){\r\n            error = \"Price is required\"\r\n        } else {\r\n            return true\r\n        }\r\n        swal({\r\n            type: \"error\",\r\n            title: error\r\n        })\r\n    }\r\n\r\n    reroute = () => {\r\n        switch(this.state.selection){\r\n            case 'wyr':\r\n                this.props.history.push(\"/wyr\")\r\n                break;\r\n            case 'rtd':\r\n                this.props.history.push(\"/rtd\")\r\n                break;\r\n            default:\r\n                console.log(\"error\")\r\n        }\r\n    }\r\n\r\n    checkUseLocation = selection => {\r\n        this.setState({\r\n            selection: selection\r\n        })\r\n        if (this.state.useLocation) {\r\n            navigator.geolocation.getCurrentPosition(this.submitBtn)\r\n        } else {\r\n            this.submitBtn()\r\n        }\r\n    }\r\n\r\n    priceBtn(selected) {\r\n        const index = this.state.price.indexOf(selected);\r\n        if (index < 0) {\r\n            this.state.price.push(selected);\r\n        } else {\r\n            this.state.price.splice(index, 1);\r\n        }\r\n        this.setState({ price: [...this.state.price] });\r\n    }\r\n\r\n    toggleModal(e){\r\n        e.preventDefault()\r\n        if(this.props.data.search){\r\n            this.grabValues()\r\n        }\r\n        this.setState(prevState => {\r\n            return {\r\n                showModal: !prevState.showModal\r\n            }    \r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <a href=\"#\" className=\"nav-link js-scroll-trigger\" style={this.props.buttons} onClick={this.toggleModal}>Search</a>\r\n                <Modal isOpen={this.state.showModal} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal} style={{textAlign: 'center'}}>Search</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form className=\"col-sm-6\">\r\n                            <FormGroup>\r\n                                <Label>Search Term</Label>\r\n                                <Input type=\"text\" name=\"term\" value={this.state.term} onChange={this.inputChange} className=\"form-control\" placeholder=\"Enter a Search Term\" />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Location</Label>\r\n                                <Input type=\"text\" name=\"location\" value={this.state.location} onChange={this.inputChange} className=\"form-control\" disabled={this.state.useLocation} placeholder=\"Enter a location\" />\r\n                                <CustomInput type=\"checkbox\" name=\"useLocation\" id=\"useLocation\" onChange={this.inputChange} checked={this.state.useLocation} label=\"Use Current Location\" />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Distance</Label>\r\n                                <Input type=\"select\" name=\"radius\" onChange={this.inputChange} value={this.state.radius}>\r\n                                    <option value={1609}>1 mile</option>\r\n                                    <option value={8046}>5 miles</option>\r\n                                    <option value={16093}>10 miles</option>\r\n                                    <option value={32186}>20 miles</option>\r\n                                </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Price</Label>\r\n                                <br></br>\r\n                                <ButtonGroup>\r\n                                    <Button color=\"secondary\" onClick={() => this.priceBtn(1)} active={this.state.price.includes(1)}>$</Button>\r\n                                    <Button color=\"secondary\" onClick={() => this.priceBtn(2)} active={this.state.price.includes(2)}>$$</Button>\r\n                                    <Button color=\"secondary\" onClick={() => this.priceBtn(3)} active={this.state.price.includes(3)}>$$$</Button>\r\n                                    <Button color=\"secondary\" onClick={() => this.priceBtn(4)} active={this.state.price.includes(4)}>$$$$</Button>\r\n                                </ButtonGroup>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <CustomInput type=\"checkbox\" name=\"openNow\" id=\"openNow\" onChange={this.inputChange} checked={this.state.openNow} label=\"Open Now\" />\r\n                            </FormGroup>\r\n\r\n                        </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button type=\"button\" className=\"btn btn-secondary mx-auto\" onClick={()=> {this.checkUseLocation(\"rtd\")}}>RollTheDice</Button>\r\n                        <Button type=\"button\" className=\"btn btn-secondary mx-auto\" onClick={() => {this.checkUseLocation(\"wyr\")}}>WouldYouRather</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setSearch: data => dispatch(setSearch(data))\r\n})\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state.search\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SettingsForm))","import React from 'react';\r\nimport { withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { logout } from '../services/userService'\r\nimport { logoutUser } from '../actions'\r\nimport SettingsForm from '../components/SettingsForm'\r\n\r\nclass Nav extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.navigate = this.navigate.bind(this)\r\n    }\r\n\r\n    navigate(e, target){\r\n        e.preventDefault()\r\n        switch(target){\r\n            case 0:\r\n                this.props.history.push(\"/\")\r\n                break;\r\n            case 1:\r\n                this.props.history.push(\"/login\")\r\n                break;\r\n            case 2:\r\n                this.props.history.push(\"/register\")\r\n                break;\r\n            case 3:\r\n                this.props.history.push(\"/search\")\r\n                break;\r\n            // case 4:\r\n            //     this.props.history.push(\"/settings\")\r\n            //     break;\r\n            case 5:\r\n                // this.props.history.push(\"/help/rtd\")\r\n                this.props.history.push(\"/rtd\")\r\n                break;\r\n            case 6:\r\n                // this.props.history.push(\"/help/wyr\")\r\n                this.props.history.push('/wyr')\r\n                break;\r\n            // case 7:\r\n            //     logout()\r\n            //         .then(() => this.props.logout())\r\n            //         .then(() => this.props.history.push(\"/\"))\r\n            //         .catch(console.error)\r\n            //     break;\r\n            default:\r\n                console.log(\"error\")\r\n        } \r\n    }\r\n    render(){\r\n        let route = this.props.location.pathname\r\n        const navbar = route === \"/\" ? null : {zIndex: 0, position: \"inherit\"}\r\n        const title = route === \"/\" ? null : {color: '#161616'}\r\n        const buttons = route === \"/\" ? null : {color: 'rgba(0, 0, 0, 0.5)'}\r\n        const loggedIn = this.props.user.user ? (\r\n            <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                    <a href=\"#\" className=\"nav-link js-scroll-trigger\" onClick={e => {this.navigate(e, 1)}} style={buttons}>Log In</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a href=\"#\" className=\"nav-link js-scroll-trigger\" onClick={e => {this.navigate(e, 2)}} style={buttons}>Sign Up</a>\r\n                </li>\r\n            </ul>\r\n        ) : (\r\n            <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                    <a href=\"#\" className=\"nav-link js-scroll-trigger\" onClick={e => {this.navigate(e, 6)}} style={buttons}>Would You Rather</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a href=\"#\" className=\"nav-link js-scroll-trigger\" onClick={e => {this.navigate(e, 5)}} style={buttons}>Roll The Dice</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    {/* <a href=\"#\" className=\"nav-link js-scroll-trigger\" onClick={e => {this.navigate(e, 3)}} style={buttons}>Search</a> */}\r\n                    <SettingsForm buttons={buttons}/>\r\n                </li>\r\n                {/* <li className=\"nav-item\">\r\n                    <a href=\"#\" className=\"nav-link js-scroll-trigger\" onClick={e => {this.navigate(e, 4)}} style={buttons}>History</a>\r\n                </li> */}\r\n                {/* <li className=\"nav-item\">\r\n                    <a href=\"#\" className=\"nav-link js-scroll-trigger\" onClick={e => {this.navigate(e, 7)}} style={buttons}>Logout</a>\r\n                </li> */}\r\n            </ul>\r\n        )\r\n        return (\r\n            <React.Fragment>\r\n                    <nav className=\"navbar navbar-expand-lg navbar-light fixed-top navbar-shrink\" id=\"mainNav\" style={navbar}>\r\n                        <div className=\"container\">\r\n                            <a href=\"#\" className=\"navbar-brand js-scroll-trigger\"style={title} onClick={e => {this.navigate(e, 0)}}>Pick a Place</a>\r\n                            <button className=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            Menu\r\n                            <i className=\"fas fa-bars\"></i>\r\n                            </button>\r\n                            <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n                                {loggedIn}\r\n                            </div>\r\n                        </div>\r\n                    </nav>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.currentUser\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    logout: () => dispatch(logoutUser())\r\n})\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Nav))","import React from 'react';\r\n\r\nclass Homepage extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.rtd = this.rtd.bind(this)\r\n    }\r\n\r\n    rtd(){\r\n        this.props.history.push(\"/rtd\")\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <header className=\"masthead\" id=\"page-top\">\r\n                    <div className=\"container d-flex h-100 align-items-center\">\r\n                        <div className=\"mx-auto text-center\">\r\n                            <h1 className=\"mx-auto my-0 text-uppercase\" style={{pointerEvents:'none'}}>Pick a Place</h1>\r\n                            {/* <h2 className=\"mx-auto my-0 text-uppercase\" style={{pointerEvents:'none'}}>dammit</h2> */}\r\n                        </div>\r\n                    </div>\r\n                </header>\r\n                <section id=\"about\" className=\"about-section text-center\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-8 mx-auto\">\r\n                                <h2 className=\"text-white mb-4\">What do you want to eat, dammit</h2>\r\n                                <p className=\"text-white-50\">For those who don't know what the to eat.</p>\r\n                            </div>\r\n\r\n                        </div>\r\n                        {/* <img src=\"img/ipad.png\" className=\"img-fluid\" alt=\"\" /> */}\r\n                    </div>\r\n                </section>\r\n                <br /><br /><br /><br /><br /><br />\r\n                <div className=\"featured-text text-center\">\r\n                    <p className=\"text-black-50 mb-0 \">Let us to decide for you.</p>\r\n                    <button type=\"button\" className=\"btn btn-primary mx-auto\" style={{backgroundColor: \"#64a19d\", borderColor: \"#64a19d\"}} onClick={this.rtd}>Roll the Dice</button>\r\n                </div>\r\n                <br /><br /><br /><br /><br /><br />\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Homepage;","import React from 'react';\r\nimport * as userService from '../services/userService'\r\nimport \"./Register.css\"\r\nclass Register extends React.Component {\r\nconstructor(props){\r\n    super(props)\r\n    this.state = {\r\n        username: '',\r\n        email: '',\r\n        password: ''\r\n    }\r\n    this.inputChange = this.inputChange.bind(this);\r\n    this.register = this.register.bind(this)\r\n}\r\n\r\ninputChange(e){\r\n    this.setState({\r\n        [e.target.name]: e.target.value\r\n    })\r\n}\r\n\r\nregister(){\r\n    const data = {\r\n        username: this.state.username,\r\n        email: this.state.email,\r\n        password: this.state.password\r\n    }\r\n    userService.register(data)\r\n        .then(console.log)\r\n        .catch(console.log)\r\n}\r\n\r\n\r\nrender(){\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"container\">\r\n                <h2>Register</h2>\r\n                <form className=\"col-sm-12 remove-padding\">\r\n                    <div className=\"col-sm-6 remove-padding\">\r\n                        <label>Username</label>\r\n                        <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.inputChange} className=\"form-control\" />\r\n                    </div>\r\n                    <div className=\"col-sm-6 remove-padding\">\r\n                        <label>Email</label>\r\n                        <input type=\"text\" name=\"email\" value={this.state.email} onChange={this.inputChange} className=\"form-control\" />\r\n                    </div>\r\n                    <div className=\"col-sm-6 remove-padding\">\r\n                        <label>Password</label>\r\n                        <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.inputChange} className=\"form-control\" />\r\n                    </div>\r\n                </form>\r\n                <br></br>\r\n                <button type=\"button\" class=\"btn btn-primary mx-auto\" onClick={this.register}>Register</button>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n}\r\n\r\nexport default Register","import React from 'react';\r\nimport * as userService from '../services/userService'\r\nimport { connect } from 'react-redux'\r\nimport { withCookies } from 'react-cookie'\r\nimport { setUser } from '../actions/index'\r\n\r\nclass Login extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            username: '',\r\n            email: '',\r\n            password: ''\r\n        }\r\n        this.inputChange = this.inputChange.bind(this);\r\n        this.login = this.login.bind(this)\r\n    }\r\n\r\n    inputChange(e){\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    login(){\r\n        const data = {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        }\r\n        userService.login(data)\r\n            .then(() => {\r\n                let user = this.props.cookies.get('myCookie')\r\n                if(user){\r\n                    this.props.setUser(user)\r\n                }\r\n            })\r\n            .then(() => this.props.history.push(\"/search\"))\r\n            .catch(console.log)\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"container\">\r\n                    <h2>Login</h2>\r\n                    <form className=\"col-sm-12 remove-padding\">\r\n                        <div className=\"col-sm-6 remove-padding\">\r\n                            <label>Username</label>\r\n                            <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.inputChange} className=\"form-control\" />\r\n                        </div>\r\n                        <div className=\"col-sm-6 remove-padding\">\r\n                            <label>Password</label>\r\n                            <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.inputChange} className=\"form-control\" />\r\n                        </div>\r\n                    </form>\r\n                    <br></br>\r\n                    <button type=\"button\" className=\"btn btn-primary mx-auto\" onClick={this.login}>login</button>\r\n                </div>\r\n        </React.Fragment>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    setUser: user => dispatch(setUser(user))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(withCookies(Login))","import axios from 'axios'\r\n\r\nfunction register(data){\r\n    let url = \"/api/users/register\"\r\n    const config = {\r\n        method: 'POST',\r\n        data: data\r\n    }\r\n    return axios(url, config)\r\n}\r\n\r\nfunction login(data){\r\n    let url = \"/api/users/login\"\r\n    const config ={\r\n        method: 'POST',\r\n        data: data\r\n    }\r\n    return axios(url, config)\r\n}\r\n\r\nfunction logout(){\r\n    let url = \"/api/users/logout\"\r\n    const config = {\r\n        method: 'GET'\r\n    }\r\n    return axios(url, config)\r\n}\r\n\r\nexport { register, login, logout }","import axios from 'axios';\r\n\r\nfunction getAll(){\r\n    let url = \"/api/settings\"\r\n    const config = {\r\n        method: 'GET'\r\n    }\r\n    return axios(url, config)\r\n        .then(responseSuccessHandler)\r\n        .catch(responseErrorHandler)\r\n}\r\n\r\nfunction create(data){\r\n    let url = \"/api/settings\"\r\n    const config = {\r\n        method: 'POST',\r\n        data: data\r\n    }\r\n    return axios(url, config)\r\n        .then(responseSuccessHandler)\r\n        .catch(responseErrorHandler)\r\n}\r\n\r\nfunction searchById(id){\r\n    let url = \"/api/settings/search/\" + id;\r\n    const config = {\r\n        method: 'GET'\r\n    }\r\n    return axios(url,config)\r\n        .then(responseSuccessHandler)\r\n        .catch(responseErrorHandler)\r\n}\r\n\r\nfunction deleteById(id){\r\n    let url = \"/api/settings/\" + id;\r\n    const config = {\r\n        method: 'DELETE'\r\n    }\r\n    return axios(url, config)\r\n}\r\n\r\nfunction updateById(data){\r\n    let url = \"/api/settings/\" + data.id;\r\n    const config = {\r\n        method: 'PUT',\r\n        data: data\r\n    }\r\n    return axios(url, config)\r\n        .then(responseSuccessHandler)\r\n        .catch(responseErrorHandler)\r\n}\r\n\r\nfunction getById(id){\r\n    let url = \"/api/settings/\" + id;\r\n    const config = {\r\n        method: 'GET'\r\n    }\r\n    return axios(url, config)\r\n        .then(responseSuccessHandler)\r\n        .catch(responseErrorHandler)\r\n}\r\n\r\nexport { getAll, create, searchById, deleteById, updateById, getById }\r\n\r\nfunction responseSuccessHandler(response){\r\n    return response.data\r\n}\r\n\r\nfunction responseErrorHandler(err){\r\n    console.log(err)\r\n}","import React from 'react';\r\nimport { Card, CardTitle, CardText, Button, CardDeck, Badge, ButtonGroup } from 'reactstrap';\r\nimport * as settingsService from '../services/settingsService'\r\n\r\nclass ViewSettings extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            settings: []\r\n        }\r\n        this.rollTheDice = this.rollTheDice.bind(this);\r\n        this.wouldYouRather = this.wouldYouRather.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getAllSettings()\r\n    }\r\n\r\n    getAllSettings(){\r\n        settingsService.getAll()\r\n            .then(response => {\r\n                this.setState({\r\n                    settings: response.items\r\n                })\r\n            })\r\n            .catch(console.log)\r\n    }\r\n\r\n    rollTheDice(id){\r\n        this.props.history.push(\"/rtd/\" + id)\r\n    }\r\n\r\n    wouldYouRather(id){\r\n        this.props.history.push(\"/wyr/\" + id)\r\n    }\r\n\r\n    deleteSetting(id){\r\n        settingsService.deleteById(id)\r\n            .then(() => {this.getAllSettings()})\r\n            .catch(console.error)\r\n    }\r\n\r\n    toForm(id){\r\n        this.props.history.push(\"/search/\" + id)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"container\">\r\n                    <div className=\"col-sm-12\">\r\n                        <CardDeck>\r\n                            {this.state.settings[0] ? this.state.settings.map(item => {\r\n                                let price = JSON.parse(item.price).sort((a, b) => a-b);\r\n                                let dollarSign = price.map((item, index) => (index ? ', ': \"\") + \"$\".repeat(item))\r\n                                return (\r\n                                    <div className=\"col-sm-4\">\r\n                                        <Card body inverse style={{ backgroundColor: '#333', borderColor: '#333', margin: '5px' }}>\r\n                                            {/* <CardTitle>Location: {item.Location}</CardTitle>\r\n                                            <CardSubtitle>Radius: {item.Radius}mi</CardSubtitle> */}\r\n                                            <CardTitle className=\"text-center\">\r\n                                                {item.term}\r\n                                                <a href=\"#\" onClick={e => {this.deleteSetting(item.id)}}><i className=\"fas fa-trash-alt\" style={{color: 'white', position: 'absolute', top: 0, right: 0, padding:'10px'}}></i></a>\r\n                                            </CardTitle>\r\n                                            <CardText>\r\n                                                <span>\r\n                                                    <strong>Location: </strong>\r\n                                                    <br></br>\r\n                                                    {item.location || \"Current Location\"}\r\n                                                </span> \r\n                                               \r\n                                                <br></br>\r\n                                                <span><strong >Open Now: </strong>\r\n                                                    {item.openNow \r\n                                                        ?<Badge color=\"success\">Yes</Badge>\r\n                                                        :<Badge color=\"danger\">No</Badge>\r\n                                                    }\r\n                                                </span>\r\n                                                <br></br>\r\n                                                <span><strong>Price: </strong>{dollarSign}</span>\r\n                                            </CardText>\r\n                                            <ButtonGroup>\r\n                                                <div style={{width: \"100%\"}}>\r\n                                                    <Button className=\"col-sm-4\" outline color=\"info\" onClick={e => {this.rollTheDice(item.id)}}>RTD</Button>\r\n                                                    <Button className=\"col-sm-4\" outline color=\"success\" onClick={e => {this.toForm(item.id)}}>Edit</Button>\r\n                                                    <Button className=\"col-sm-4\" outline color=\"primary\" onClick={e => {this.wouldYouRather(item.id)}}>WYR</Button>\r\n                                                </div>\r\n                                            </ButtonGroup>\r\n                                        </Card>\r\n                                    </div>\r\n                                )})\r\n                                :null\r\n                            }\r\n                        </CardDeck>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewSettings","import axios from \"axios\";\r\n\r\nfunction search(data){\r\n    let url = \"/api/yelp\"\r\n    const config = {\r\n        method: 'POST',\r\n        data: data\r\n    }\r\n    return axios(url, config)\r\n        .then(responseSuccessHandler)\r\n        .catch(responseErrorHandler)\r\n}\r\n\r\nfunction scrape(str){\r\n    let alias = \"https://www.yelp.com/biz/\" + str\r\n    let url = \"/api/yelp/wait\";\r\n    const config = {\r\n        method: 'POST',\r\n        data: {\r\n            value: alias\r\n        }\r\n    }\r\n    return axios(url, config)\r\n        .then(responseSuccessHandler)\r\n        .catch(responseErrorHandler)\r\n}\r\n\r\nfunction responseSuccessHandler(response){\r\n    return response.data\r\n}\r\n\r\nfunction responseErrorHandler(err){\r\n    console.log(err)\r\n}\r\nexport { search, scrape }","export const shuffleResults = (arr) => {\r\n    for (let i = arr.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [arr[i], arr[j]] = [arr[j], arr[i]];\r\n    }\r\n    return arr;\r\n}\r\n\r\nexport const getGeoLocation = (fn) => {\r\n    if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(fn)\r\n    } else {\r\n        alert(\"GeoLocation not available\")\r\n    }\r\n}\r\n\r\nexport const randomNumberOfArr = (arr) => {\r\n    return Math.floor(Math.random() * arr.length)\r\n}","import React from 'react';\r\nimport Rating from 'react-rating'\r\nimport { Card, CardImg, CardText, CardTitle, Badge, Button, Collapse, ListGroup, ListGroupItem } from 'reactstrap'\r\nimport WaitList from './WaitList'\r\n\r\nclass YelpCard extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            collapse: false,\r\n            waitList: [],\r\n            scraped: false\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let distance = Math.round(this.props.result.distance / 1600)\r\n        return (\r\n            <React.Fragment>\r\n                <Card key={this.props.result.id}>\r\n                    <a href={this.props.result.url}>\r\n                        <div style={{height:\"231.762px\", display:'flex', alignItems:'center', overflow:'hidden'}}>\r\n                            <CardImg src={this.props.result.image_url} style={{flex:'none', width:'100%'}}/>\r\n                        </div>\r\n                    </a>\r\n                    <CardTitle className=\"text-center\"><strong>{this.props.result.name}</strong></CardTitle>\r\n                    <CardText className=\"text-center\">\r\n                        <Rating \r\n                            readonly={true}\r\n                            initialRating={this.props.result.rating} \r\n                            emptySymbol={<i className=\"far fa-star\"></i>}\r\n                            fullSymbol={<i className=\"fas fa-star\"></i>}\r\n                            />\r\n                        <br></br>\r\n                        <span className=\"text-center\">{this.props.result.is_closed \r\n                            ?<Badge color=\"danger\" pill>Closed</Badge>\r\n                            :<Badge color=\"success\" pill>Open</Badge>\r\n                        }\r\n                        </span>\r\n                        <br></br>\r\n                        <strong>{`${this.props.result.location.address1}, ${this.props.result.location.city}, ${this.props.result.location.zip_code}`}</strong>\r\n                        <br></br>\r\n                        <strong>{this.props.result.display_phone}</strong>\r\n                    </CardText>\r\n                    <CardText className=\"col-sm-12\">\r\n                        <strong>Distance:</strong> { distance <= 1 ? + distance + \" mile\" : distance + \" miles\"} \r\n                        <br></br>\r\n                        <strong>Price:</strong> {this.props.result.price}\r\n                        <br></br>\r\n                        <strong>Reviews:</strong> {this.props.result.review_count}\r\n                        <br></br>\r\n                        <strong>Categories:</strong> {this.props.result.categories.map((item, index) => {\r\n                            return (index ? ', ': \"\") + item.title\r\n                        })}\r\n                    </CardText>\r\n                </Card>\r\n                {/* <a href={this.props.result.url} style={{textDecoration: 'none'}}>\r\n                    <Button block>Visit Yelp Page</Button>\r\n                </a> */}\r\n                {/* <WaitList alias={this.props.result.alias} /> */}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YelpCard","import React from 'react';\r\nimport { ListGroup, Collapse, ListGroupItem, Button } from 'reactstrap'\r\nimport * as yelpService from '../services/yelpService'\r\n\r\nclass WaitList extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            collapse: false,\r\n            waitList: [],\r\n        }\r\n    }\r\n\r\n    toggleCollapse = str => {\r\n        if(this.state.waitList){\r\n            yelpService.scrape(str)\r\n                .then(response => {\r\n                    this.setState({\r\n                        collapse: true,\r\n                        waitList: response,\r\n                    })\r\n                })\r\n                .catch(console.error)\r\n        } else {\r\n            this.setState(prevState => {\r\n                return {\r\n                    collapse: !prevState.collapse\r\n                }    \r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <Button block onClick={e => {this.toggleCollapse(this.props.alias)}}>View Wait List</Button>\r\n                <Collapse className=\"row\" isOpen={this.state.collapse}>\r\n                    <ListGroup>\r\n                        {this.state.collapse && this.state.waitList.map(item => {\r\n                            return (\r\n                                <ListGroupItem>{item}</ListGroupItem>\r\n                            )\r\n                        })\r\n                        }\r\n                    </ListGroup>\r\n                </Collapse>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WaitList","import React from 'react';\r\nimport * as yelpService from '../services/yelpService'\r\nimport { CardColumns } from 'reactstrap'\r\nimport { shuffleResults } from '../services/resuseableFunctions'\r\nimport YelpCard from './YelpCard';\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport { connect } from 'react-redux'\r\nimport swal from 'sweetalert2'\r\n\r\nclass RollTheDice extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            results: [],\r\n        }\r\n        this.rtd = this.rtd.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.data.search){\r\n            this.rtd()\r\n        } else {\r\n            this.getGeoLocation();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.data.search !== this.props.data.search){\r\n            this.rtd()\r\n        }\r\n    }\r\n\r\n    getGeoLocation(){\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(this.rtd, function(){\r\n                swal({\r\n                    type: \"error\",\r\n                    title: \"Location not found\",\r\n                    text: \"Make sure you have https:// at the front of the url and allow location access. You can also use the Search functionality instead\"\r\n                })\r\n            })\r\n        } else {\r\n            swal({\r\n                type: \"error\",\r\n                title: \"Location not found\",\r\n                text: \"Make sure you have https:// at the front of the url and allow location access. You can also use the Search functionality instead\"\r\n            })\r\n        }\r\n    }\r\n\r\n    rtd(position){\r\n        let promise;\r\n        let query = {}\r\n        if(this.props.data.search){\r\n            promise = yelpService.search(this.props.data.search)\r\n        } else {\r\n            query = {\r\n                longitude: position.coords.longitude,\r\n                latitude: position.coords.latitude,\r\n                term: \"restaurant\",\r\n                radius: 8046,\r\n                limit: 50,\r\n                open_now: true,\r\n                price: 1\r\n            }\r\n            promise = yelpService.search(query)\r\n        }\r\n        promise\r\n            .then(response => {\r\n                let shuffle = shuffleResults(response.businesses)\r\n                let three = shuffle.slice(0,3)\r\n                this.setState({\r\n                    results: three\r\n                })\r\n            })\r\n            .catch(console.log)\r\n    }\r\n\r\n    render(){\r\n        const headerText = {\r\n            // fontFamily: \"Varela Round\",\r\n            fontWeight: \"700\",\r\n            fontSize: \"2.5rem\",\r\n            lineHeight: \"2.5rem\"\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"row\">\r\n                    <div className=\"container mb-2\">\r\n                        <h1 className=\"text-center\" style={headerText}>Roll The Dice</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <CardColumns>\r\n                        {this.state.results[0] && this.state.results.map(item => {\r\n                            return (\r\n                                <CSSTransition \r\n                                    key={item.id} \r\n                                    in={true}\r\n                                    appear={true}\r\n                                    timeout={1000}\r\n                                    classNames=\"fade-card\"\r\n                                >\r\n                                    <React.Fragment>\r\n                                        <YelpCard result={item} />\r\n                                    </React.Fragment>\r\n                                </CSSTransition>\r\n                            )\r\n                        })}\r\n                    </CardColumns>\r\n                    {/* <Collapse className=\"row\" isOpen={this.state.collapse}>\r\n                        <ListGroup>\r\n                            {this.state.collapse && this.state.waitList.map(item => {\r\n                                return (\r\n                                    <ListGroupItem>{item}</ListGroupItem>\r\n                                )\r\n                            })\r\n                            }\r\n                        </ListGroup>\r\n                    </Collapse> */}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state.search\r\n})\r\n\r\nexport default connect(mapStateToProps)(RollTheDice)","import React from 'react';\r\nimport * as settingsService from '../services/settingsService'\r\nimport * as yelpService from '../services/yelpService'\r\nimport { shuffleResults } from '../services/resuseableFunctions'\r\nimport YelpCard from './YelpCard';\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport { connect } from 'react-redux'\r\nimport \"./WouldYouRather.css\"\r\nimport swal from 'sweetalert2'\r\nimport { Alert } from 'reactstrap'\r\n\r\nclass WouldYouRather extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            show: true,\r\n            results: [],\r\n            first: '',\r\n            second: '',\r\n            index: 1,\r\n            maxResults: '',\r\n            collapse: false,\r\n            waitList: []\r\n        }\r\n        this.wyr = this.wyr.bind(this)\r\n        this.select = this.select.bind(this);\r\n        this.toggleCollapse = this.toggleCollapse.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.data.search){\r\n            this.wyr()\r\n        } else {\r\n            this.getGeoLocation(this.wyr)\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.data.search !== this.props.data.search){\r\n            this.wyr()\r\n        }\r\n    }\r\n\r\n    getGeoLocation(){\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(this.wyr, function(){\r\n                swal({\r\n                    type: \"error\",\r\n                    title: \"Location not found\",\r\n                    text: \"Make sure you have https:// at the front of the url and allow location access. You can also use the Search functionality instead\"\r\n                })\r\n            })\r\n        } else {\r\n            swal({\r\n                type: \"error\",\r\n                title: \"Location not found\",\r\n                text: \"Make sure you have https:// at the front of the url and allow location access. You can also use the Search functionality instead\"\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    wyr(position){\r\n        let promise;\r\n        let query = {}\r\n        if(this.props.data.search){\r\n            promise = yelpService.search(this.props.data.search)\r\n        } else {\r\n            query = {\r\n                longitude: position.coords.longitude,\r\n                latitude: position.coords.latitude,\r\n                term: \"restaurant\",\r\n                radius: 8046,\r\n                limit: 50,\r\n                open_now: true,\r\n                price: 1\r\n            }\r\n            promise = yelpService.search(query)\r\n        }\r\n        promise\r\n            .then(response => {\r\n                let businesses = response.businesses \r\n                if(businesses.length < 2){\r\n                    swal({\r\n                        type: \"error\",\r\n                        title: \"Not Enough Businesses Found\"\r\n                    })\r\n                    } else {\r\n                        let shuffle = shuffleResults(response.businesses)\r\n                        let maxResults = response.businesses.length-1\r\n                        let arrOne = [shuffle[0]]\r\n                    let arrTwo = [shuffle[1]]\r\n                    this.setState({\r\n                        results: shuffle,\r\n                        first: arrOne,\r\n                        second: arrTwo,\r\n                        maxResults: maxResults\r\n                    })\r\n                }\r\n            })\r\n            .catch(console.log)\r\n    }\r\n\r\n    select(num){\r\n        if(this.state.index <= 5){\r\n            let { results } = this.state\r\n            let index = this.state.index + 1\r\n            if(this.state.maxResults > index){\r\n                let newResult = [results[index]]\r\n                switch(num){\r\n                    case 1:\r\n                        this.setState({\r\n                            second: newResult,\r\n                            index: index,\r\n                        })\r\n                        break;\r\n                    case 2:\r\n                        this.setState({\r\n                            first: newResult,\r\n                            index: index,\r\n                        })\r\n                        break;\r\n                    default:\r\n                        console.log(\"error\")\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleCollapse = str => {\r\n        if(this.state.waitList){\r\n            yelpService.scrape(str)\r\n                .then(response => {\r\n                    this.setState({\r\n                        collapse: true,\r\n                        waitList: response.data,\r\n                    })\r\n                })\r\n                .catch(console.error)\r\n        } else {\r\n            this.setState(prevState => {\r\n                return {\r\n                    collapse: !prevState.collapse\r\n                }    \r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const headerText = {\r\n            // fontFamily: \"Varela Round\",\r\n            fontWeight: \"700\",\r\n            fontSize: \"2.5rem\",\r\n            lineHeight: \"2.5rem\"\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.showAlert ? <Alert isOpen={this.state.showAlert} /> : null}\r\n                <div className=\"row\">\r\n                    <div className=\"container text-center\">\r\n                        <h1 style={headerText}>Would You Rather</h1>\r\n                        <h3>{this.state.index < 6 ? `Round ${this.state.index}!` : \"Final!\"}</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-6\">\r\n                            {this.state.first && this.state.first.map(item => {\r\n                                return (\r\n                                    <React.Fragment key={item.id} >\r\n                                        <CSSTransition \r\n                                            in={true}\r\n                                            appear={true}\r\n                                            timeout={800}\r\n                                            classNames=\"fade-card\"\r\n                                        >\r\n                                            <YelpCard result={item}/>\r\n                                        </CSSTransition>\r\n                                        <button type=\"button\" className=\"btn btn-secondary btn-block mx-auto\" onClick={e => {this.select(1)}} >Select</button>\r\n                                    </React.Fragment>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        <div className=\"col-sm-6\">\r\n                            {this.state.second && this.state.second.map(item => {\r\n                                return (\r\n                                    <React.Fragment key={item.id} >\r\n                                        <CSSTransition \r\n                                            in={true}\r\n                                            appear={true}\r\n                                            timeout={800}\r\n                                            classNames=\"fade-card\"\r\n                                        >\r\n                                            <YelpCard result={item} />\r\n                                        </CSSTransition>\r\n                                        <button type=\"button\" className=\"btn btn-secondary btn-block mx-auto\" onClick={e => {this.select(2)}}>Select</button>\r\n                                    </React.Fragment>\r\n                                    )\r\n                                })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state.search\r\n})\r\n\r\nexport default connect(mapStateToProps)(WouldYouRather)","import React from 'react';\r\nimport { Button } from 'reactstrap'\r\nimport SettingsForm from './SettingsForm'\r\n\r\nclass HelpPage extends React.Component {\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                {this.props.match.params.type === \"wyr\" ? \r\n                (\r\n                    <div className=\"container\">\r\n                        <div className=\"card\">\r\n                            <div className=\"container text-center mb-4 mt-4\">\r\n                                <h3>Would You Rather</h3>\r\n                                {/* <h6>As default, we will give you two random options.</h6>\r\n                                <h6>Choose the option you prefer, and after 5 rounds there will be your final two options for you to choose from</h6>\r\n                                <h6 className=\"mb-3\">You can also define your search by adding parameters</h6> */}\r\n                                <Button type=\"button\" className=\"mx-auto\" onClick={e => {this.props.history.push(\"/wyr\")}}>Decide For Me</Button>\r\n                                <Button type=\"button\" className=\"ml-4\">Let Me Search</Button> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"container\">\r\n                        <div className=\"card\">\r\n                            <div className=\"container text-center mb-4 mt-4\">\r\n                                <h3>Roll The Dice</h3>\r\n                                {/* <h6>3 randomly generated options</h6>\r\n                                <h6>You may also define your own search query</h6>\r\n                                <h6 className=\"mb-3\">You can also define your search by adding parameters</h6> */}\r\n                                <Button type=\"button\" className=\"mx-auto\" onClick={e => {this.props.history.push(\"/rtd\")}}>Decide For Me</Button>\r\n                                <Button type=\"button\" className=\"ml-4\">Let Me Search</Button> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HelpPage","import React from 'react'\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { withRouter } from 'react-router-dom'\r\nimport Register from '../components/Register'\r\nimport Homepage from './Homepage'\r\nimport Login from \"../components/Login\";\r\nimport ViewSettings from \"../components/ViewSettings\";\r\nimport Search from '../components/SettingsForm';\r\nimport RollTheDice from \"../components/RollTheDice\";\r\nimport WouldYouRather from '../components/WouldYouRather'\r\nimport HelpPage from '../components/HelpPage';\r\n\r\nclass ContentRouter extends React.Component {\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                {/* <TransitionGroup className=\"transition-group\"> */}\r\n                    {/* <CSSTransition\r\n                        key={this.props.location.key}\r\n                        timeout={{ enter: 300, exit: 300 }}\r\n                        classNames=\"fade\"\r\n                    >\r\n                        <section className=\"route-section\"> */}\r\n                            <Switch>\r\n                                {/* <Route path=\"/\">Home */}\r\n                                {/* <Route path=\"/other\">Other */}\r\n                                <Route path=\"/\" exact component={Homepage} />\r\n                                {/* <Route path=\"/register\" component={Register} />\r\n                                <Route path=\"/login\" component={Login} />\r\n                                <Route path=\"/settings\" component={ViewSettings} /> */}\r\n                                <Route path=\"/help/:type?\" component={HelpPage} />\r\n                                <Route path=\"/search/:id?\" component={Search} />\r\n                                <Route path=\"/rtd/:id?\" component={RollTheDice} />\r\n                                <Route path=\"/wyr/:id?\" component={WouldYouRather} />\r\n                            </Switch>\r\n                        {/* </section>\r\n                    </CSSTransition> */}\r\n                {/* </TransitionGroup> */}\r\n            </React.Fragment>\r\n        )   \r\n    }\r\n}\r\n\r\nexport default withRouter(ContentRouter)","import React from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nclass ActiveSearch extends React.Component {\r\n    render(){\r\n        const setting = this.props.data.search\r\n        let location;\r\n        let price;\r\n        if(setting){\r\n            if(setting.currentLocation){\r\n                location = \"Current Location\"\r\n            } else {\r\n                location = setting.location;\r\n            }\r\n            if(setting.price){\r\n                let priceArr = JSON.parse(setting.price)\r\n                for(let i=0; i<priceArr.length; i++){\r\n                    debugger\r\n                    if(i === priceArr.length){\r\n                        price.append(\"$\".repeat(setting.price[i]))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        let render = this.props.data.search ? (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <p className=\"col-sm-2 offset-md-1\">Term: {setting.term}</p>\r\n                    {/* <p>{location}</p> */}\r\n                    <p className=\"col-sm-2\">Location: {location}</p>\r\n                    <p className=\"col-sm-2\">Open Now: {setting.openNow.toString()}</p>\r\n                    <p className=\"col-sm-2\">Price: {price}</p>\r\n                    <p className=\"col-sm-2\">Radius: {Math.round(setting.radius / 1609) + \" miles\"}</p>\r\n                </div>\r\n            </div>\r\n        ) : (\r\n            <div></div>\r\n        )\r\n        return (\r\n            <React.Fragment>\r\n                {render}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapsStateToProps = state => ({\r\n    data: state.search\r\n})\r\n\r\nexport default connect(mapsStateToProps)(ActiveSearch)","import React from 'react';\r\nimport Nav from './Nav'\r\nimport ContentRouter from './ContentRouter'\r\nimport { withRouter } from 'react-router-dom'\r\nimport ActiveSearch from '../components/ActiveSearch'\r\n\r\nclass Layout extends React.Component{\r\n\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <Nav />\r\n                {/* {this.props.location.pathname === \"/rtd\" || \"/wyr\" ? <ActiveSearch /> : null} */}\r\n                <ContentRouter />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Layout)","import React from 'react';\r\nimport { withCookies } from 'react-cookie'\r\nimport Layout from './Layout';\r\nimport { connect } from 'react-redux'\r\nimport { setUser } from '../actions'\r\n\r\n\r\nclass CookieCheck extends React.Component {\r\n    componentDidMount(){\r\n        let { cookies } = this.props\r\n        let user = cookies.get('myCookie')\r\n        if(user){\r\n            this.props.setUser(user)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <Layout />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setUser: user => dispatch(setUser(user))\r\n})\r\n\r\nexport default withCookies(connect(null, mapDispatchToProps)(CookieCheck));","const currentUser = (state = {}, action) => {\r\n    switch(action.type){\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                user: action.user\r\n            }        \r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default currentUser","const search = (state = {}, action) => {\r\n    switch(action.type){\r\n        case 'SET_SEARCH':\r\n            return {\r\n                ...state,\r\n                search: action.search\r\n            }\r\n            default: \r\n                return state\r\n    }\r\n} \r\n\r\nexport default search","import { combineReducers } from 'redux'\r\nimport currentUser from './currentUser'\r\nimport search from './search'\r\n\r\nconst appReducer = combineReducers({\r\n    currentUser,\r\n    search\r\n})\r\n\r\nconst rootReducer = (state, action) => {\r\n    if(action.type === \"USER_LOGOUT\"){\r\n        state = undefined\r\n    }\r\n    return appReducer(state, action);\r\n}\r\n\r\nexport default rootReducer","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { CookiesProvider } from 'react-cookie'\r\nimport CookieCheck from './layout/CookieCheck';\r\nimport rootReducer from './reducers'\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\n\r\nconst store = createStore(\r\n\trootReducer,\r\n\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n\t\t\t<Provider store={store}>\r\n\t\t\t\t<BrowserRouter>\r\n\t\t\t\t\t<CookiesProvider>\r\n\t\t\t\t\t\t<CookieCheck />\r\n\t\t\t\t\t</CookiesProvider>\r\n\t\t\t\t</BrowserRouter>\r\n\t\t\t</Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}