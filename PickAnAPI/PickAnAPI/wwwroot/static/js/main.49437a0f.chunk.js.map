{"version":3,"sources":["diceroll.gif","actions/index.js","components/SettingsForm.js","layout/Nav.js","layout/Homepage.js","components/Register.js","components/Login.js","services/userService.js","services/settingsService.js","components/ViewSettings.js","services/yelpService.js","services/resuseableFunctions.js","components/YelpCard.js","components/WaitList.js","components/RollTheDice.js","components/DiceRoll.js","components/WouldYouRather.js","components/HelpPage.js","layout/ContentRouter.js","components/ActiveSearch.js","layout/Layout.js","layout/CookieCheck.js","reducers/currentUser.js","reducers/loading.js","reducers/search.js","reducers/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","setUser","user","type","setLoading","loading","SettingsForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","reroute","state","selection","history","push","console","log","checkUseLocation","setState","useLocation","navigator","geolocation","getCurrentPosition","submitBtn","term","location","radius","price","openNow","showModal","inputChange","bind","assertThisInitialized","priceBtn","toggleModal","grabValues","search","data","JSON","parse","currentLocation","e","value","target","checked","defineProperty","name","position","stringify","longitude","coords","latitude","validation","setSearch","error","swal","title","selected","index","indexOf","splice","toConsumableArray","preventDefault","prevState","_this2","react_default","a","createElement","Fragment","href","className","style","buttons","onClick","reactstrap_es","isOpen","toggle","textAlign","onChange","placeholder","disabled","id","label","color","active","includes","React","Component","withRouter","connect","dispatch","Nav","navigate","route","pathname","navbar","zIndex","activeRTD","fontWeight","activeWYR","loggedIn","components_SettingsForm","data-toggle","data-target","aria-controls","aria-expanded","aria-label","currentUser","logout","Homepage","rtd","pointerEvents","backgroundColor","borderColor","Login","username","email","password","login","config","method","axios","userService","then","cookies","get","catch","withCookies","responseSuccessHandler","response","responseErrorHandler","err","scrape","str","shuffleResults","arr","i","length","j","Math","floor","random","_ref","YelpCard","collapse","waitList","scraped","distance","round","result","key","url","height","display","alignItems","overflow","src","image_url","flex","width","react_rating_default","readonly","initialRating","rating","emptySymbol","fullSymbol","is_closed","pill","concat","address1","city","zip_code","display_phone","review_count","categories","map","item","RollTheDice","results","loaded","reroll","getGeoLocation","prevProps","text","yelpService","limit","open_now","three","businesses","slice","_this3","react_transition_group","in","appear","timeout","classNames","components_YelpCard","WouldYouRather","toggleCollapse","show","first","second","maxResults","wyr","select","shuffle","arrOne","arrTwo","num","newResult","showAlert","fontFamily","fontSize","lineHeight","HelpPage","match","params","ContentRouter","Switch","Route","path","exact","component","Search","ActiveSearch","setting","priceArr","append","repeat","render","toString","Layout","layout_Nav","layout_ContentRouter","CookieCheck","layout_Layout","arguments","undefined","action","objectSpread","appReducer","combineReducers","rootReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","App","es","BrowserRouter","es6","layout_CookieCheck","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.49437a0f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/diceroll.1ee6ba46.gif\";","export const setUser = user => ({\r\n    type: 'SET_USER',\r\n    user: user\r\n})\r\n\r\nexport const logoutUser = () => {\r\n    return ({\r\n      type: 'USER_LOGOUT'\r\n    })\r\n}\r\n\r\nexport const setSearch = search => ({\r\n    type: 'SET_SEARCH',\r\n    search: search  \r\n})\r\n\r\nexport const setLoading = loading => ({\r\n    type: \"SET_LOADING\",\r\n    loading: loading\r\n})\r\n\r\n","import React from 'react';\r\nimport { Form, CustomInput, Label, FormGroup, Input, Button, ButtonGroup, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport { setSearch } from '../actions/index'\r\nimport { withRouter } from 'react-router-dom'\r\nimport swal from 'sweetalert2';\r\n\r\n\r\nclass SettingsForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            term: '',\r\n            location: '',\r\n            radius: 1609,\r\n            price: [],\r\n            openNow: false,\r\n            useLocation: false,\r\n            showModal: false,\r\n            selection: ''\r\n        }\r\n        this.inputChange = this.inputChange.bind(this)\r\n        this.submitBtn = this.submitBtn.bind(this);\r\n        this.priceBtn = this.priceBtn.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.grabValues = this.grabValues.bind(this);\r\n        this.reroute = this.reroute.bind(this)\r\n    }\r\n\r\n    grabValues() {\r\n        let { search } = this.props.data\r\n        this.setState({\r\n            term: search.term,\r\n            location: search.location,\r\n            radius: search.radius,\r\n            price: JSON.parse(search.price),\r\n            openNow: search.openNow,\r\n            useLocation: search.currentLocation\r\n        })\r\n    }\r\n\r\n    inputChange(e) {\r\n        const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\r\n        this.setState({\r\n            [e.target.name]: value\r\n        })\r\n    }\r\n\r\n    submitBtn(position) {\r\n        const data = {\r\n            term: this.state.term,\r\n            radius: this.state.radius,\r\n            price: JSON.stringify(this.state.price),\r\n            openNow: this.state.openNow,\r\n            currentLocation: this.state.useLocation\r\n        }\r\n        if (position) {\r\n            data.longitude = position.coords.longitude\r\n            data.latitude = position.coords.latitude\r\n        } else {\r\n            data.location = this.state.location\r\n        }\r\n        if(this.validation(data)){\r\n            this.props.setSearch(data)\r\n            this.setState({\r\n                showModal: false\r\n            })\r\n            this.reroute()\r\n        }\r\n    }\r\n\r\n    validation(data){\r\n        let price = JSON.parse(data.price);\r\n        let error\r\n        if(!data.term){\r\n            error = \"Term is required\"\r\n        } else if(!data.longitude && !data.location){\r\n            error = \"Location required\"\r\n        } else if(!price[0]){\r\n            error = \"Price is required\"\r\n        } else {\r\n            return true\r\n        }\r\n        swal({\r\n            type: \"error\",\r\n            title: error\r\n        })\r\n    }\r\n\r\n    reroute = () => {\r\n        switch(this.state.selection){\r\n            case 'wyr':\r\n                this.props.history.push(\"/wyr\")\r\n                break;\r\n            case 'rtd':\r\n                this.props.history.push(\"/rtd\")\r\n                break;\r\n            default:\r\n                console.log(\"error\")\r\n        }\r\n    }\r\n\r\n    checkUseLocation = selection => {\r\n        this.setState({\r\n            selection: selection\r\n        })\r\n        if (this.state.useLocation) {\r\n            navigator.geolocation.getCurrentPosition(this.submitBtn)\r\n        } else {\r\n            this.submitBtn()\r\n        }\r\n    }\r\n\r\n    priceBtn(selected) {\r\n        const index = this.state.price.indexOf(selected);\r\n        if (index < 0) {\r\n            this.state.price.push(selected);\r\n        } else {\r\n            this.state.price.splice(index, 1);\r\n        }\r\n        this.setState({ price: [...this.state.price] });\r\n    }\r\n\r\n    toggleModal(e){\r\n        e.preventDefault()\r\n        if(this.props.data.search){\r\n            this.grabValues()\r\n        }\r\n        this.setState(prevState => {\r\n            return {\r\n                showModal: !prevState.showModal\r\n            }    \r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <a href=\"#\" className=\"nav-link js-scroll-trigger\" style={this.props.buttons} onClick={this.toggleModal}>Search</a>\r\n                <Modal isOpen={this.state.showModal} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal} style={{textAlign: 'center'}}>Search</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form className=\"col-sm-6\">\r\n                            <FormGroup>\r\n                                <Label>Search Term</Label>\r\n                                <Input type=\"text\" name=\"term\" value={this.state.term} onChange={this.inputChange} className=\"form-control\" placeholder=\"Enter a Search Term\" />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Location</Label>\r\n                                <Input type=\"text\" name=\"location\" value={this.state.location} onChange={this.inputChange} className=\"form-control\" disabled={this.state.useLocation} placeholder=\"Enter a location\" />\r\n                                <CustomInput type=\"checkbox\" name=\"useLocation\" id=\"useLocation\" onChange={this.inputChange} checked={this.state.useLocation} label=\"Use Current Location\" />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Distance</Label>\r\n                                <Input type=\"select\" name=\"radius\" onChange={this.inputChange} value={this.state.radius}>\r\n                                    <option value={1609}>1 mile</option>\r\n                                    <option value={8046}>5 miles</option>\r\n                                    <option value={16093}>10 miles</option>\r\n                                    <option value={32186}>20 miles</option>\r\n                                </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Price</Label>\r\n                                <br></br>\r\n                                <ButtonGroup>\r\n                                    <Button color=\"secondary\" onClick={() => this.priceBtn(1)} active={this.state.price.includes(1)}>$</Button>\r\n                                    <Button color=\"secondary\" onClick={() => this.priceBtn(2)} active={this.state.price.includes(2)}>$$</Button>\r\n                                    <Button color=\"secondary\" onClick={() => this.priceBtn(3)} active={this.state.price.includes(3)}>$$$</Button>\r\n                                    <Button color=\"secondary\" onClick={() => this.priceBtn(4)} active={this.state.price.includes(4)}>$$$$</Button>\r\n                                </ButtonGroup>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <CustomInput type=\"checkbox\" name=\"openNow\" id=\"openNow\" onChange={this.inputChange} checked={this.state.openNow} label=\"Open Now\" />\r\n                            </FormGroup>\r\n\r\n                        </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button type=\"button\" className=\"btn btn-secondary mx-auto\" onClick={()=> {this.checkUseLocation(\"rtd\")}}>RollTheDice</Button>\r\n                        <Button type=\"button\" className=\"btn btn-secondary mx-auto\" onClick={() => {this.checkUseLocation(\"wyr\")}}>WouldYouRather</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setSearch: data => dispatch(setSearch(data))\r\n})\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state.search\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SettingsForm))","import React from 'react';\r\nimport { withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { logout } from '../services/userService'\r\nimport { logoutUser } from '../actions'\r\nimport SettingsForm from '../components/SettingsForm'\r\n\r\nclass Nav extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.navigate = this.navigate.bind(this)\r\n    }\r\n\r\n    navigate(e, target){\r\n        e.preventDefault()\r\n        switch(target){\r\n            case 0:\r\n                this.props.history.push(\"/\")\r\n                break;\r\n            case 1:\r\n                this.props.history.push(\"/login\")\r\n                break;\r\n            case 2:\r\n                this.props.history.push(\"/register\")\r\n                break;\r\n            case 3:\r\n                this.props.history.push(\"/search\")\r\n                break;\r\n            // case 4:\r\n            //     this.props.history.push(\"/settings\")\r\n            //     break;\r\n            case 5:\r\n                // this.props.history.push(\"/help/rtd\")\r\n                this.props.history.push(\"/rtd\")\r\n                break;\r\n            case 6:\r\n                // this.props.history.push(\"/help/wyr\")\r\n                this.props.history.push('/wyr')\r\n                break;\r\n            // case 7:\r\n            //     logout()\r\n            //         .then(() => this.props.logout())\r\n            //         .then(() => this.props.history.push(\"/\"))\r\n            //         .catch(console.error)\r\n            //     break;\r\n            default:\r\n                console.log(\"error\")\r\n        } \r\n    }\r\n    render(){\r\n        let route = this.props.location.pathname\r\n        const navbar = route === \"/\" ? null : {zIndex: 0, position: \"inherit\"}\r\n        const title = route === \"/\" ? null : {color: '#161616'}\r\n        const buttons = route === \"/\" ? null : {color: 'rgba(0, 0, 0, 0.5)'}\r\n        const activeRTD = route === \"/rtd\" ? {color: \"rgba(0, 0, 0, 1)\", fontWeight: \"700\"} : {color: \"rgba(0, 0, 0, 0.5)\"}\r\n        const activeWYR = route === \"/wyr\" ? {color: \"rgba(0, 0, 0, 1)\", fontWeight: \"700\"} : {color: \"rgba(0, 0, 0, 0.5)\"}\r\n        const loggedIn = this.props.user.user ? (\r\n            <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                    <a href=\"#\" className=\"nav-link js-scroll-trigger\" onClick={e => {this.navigate(e, 1)}} style={buttons}>Log In</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a href=\"#\" className=\"nav-link js-scroll-trigger\" onClick={e => {this.navigate(e, 2)}} style={buttons}>Sign Up</a>\r\n                </li>\r\n            </ul>\r\n        ) : (\r\n            <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                    <a href=\"#\" className=\"nav-link js-scroll-trigger\" onClick={e => {this.navigate(e, 6)}} style={activeWYR}>Would You Rather</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a href=\"#\" className=\"nav-link js-scroll-trigger\" onClick={e => {this.navigate(e, 5)}} style={activeRTD}>Roll The Dice</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    {/* <a href=\"#\" className=\"nav-link js-scroll-trigger\" onClick={e => {this.navigate(e, 3)}} style={buttons}>Search</a> */}\r\n                    <SettingsForm buttons={buttons}/>\r\n                </li>\r\n                {/* <li className=\"nav-item\">\r\n                    <a href=\"#\" className=\"nav-link js-scroll-trigger\" onClick={e => {this.navigate(e, 4)}} style={buttons}>History</a>\r\n                </li> */}\r\n                {/* <li className=\"nav-item\">\r\n                    <a href=\"#\" className=\"nav-link js-scroll-trigger\" onClick={e => {this.navigate(e, 7)}} style={buttons}>Logout</a>\r\n                </li> */}\r\n            </ul>\r\n        )\r\n        return (\r\n            <React.Fragment>\r\n                    <nav className=\"navbar navbar-expand-lg navbar-light fixed-top navbar-shrink\" id=\"mainNav\" style={navbar}>\r\n                        <div className=\"container\">\r\n                            <a href=\"#\" className=\"navbar-brand js-scroll-trigger\"style={title} onClick={e => {this.navigate(e, 0)}}>Pick a Place</a>\r\n                            <button className=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            Menu\r\n                            <i className=\"fas fa-bars\"></i>\r\n                            </button>\r\n                            <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n                                {loggedIn}\r\n                            </div>\r\n                        </div>\r\n                    </nav>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.currentUser\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    logout: () => dispatch(logoutUser())\r\n})\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Nav))","import React from 'react';\r\n\r\nclass Homepage extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.rtd = this.rtd.bind(this)\r\n    }\r\n\r\n    rtd(){\r\n        this.props.history.push(\"/rtd\")\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <header className=\"masthead\" id=\"page-top\">\r\n                    <div className=\"container d-flex h-100 align-items-center\">\r\n                        <div className=\"mx-auto text-center\">\r\n                            <h1 className=\"mx-auto my-0 text-uppercase\" style={{pointerEvents:'none'}}>Pick a Place</h1>\r\n                            {/* <h2 className=\"mx-auto my-0 text-uppercase\" style={{pointerEvents:'none'}}>dammit</h2> */}\r\n                        </div>\r\n                    </div>\r\n                </header>\r\n                <section id=\"about\" className=\"about-section text-center\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-8 mx-auto\">\r\n                                <h2 className=\"text-white mb-4\">What do you want to eat, dammit</h2>\r\n                                <p className=\"text-white-50\">For those who don't know what the to eat.</p>\r\n                            </div>\r\n\r\n                        </div>\r\n                        {/* <img src=\"img/ipad.png\" className=\"img-fluid\" alt=\"\" /> */}\r\n                    </div>\r\n                </section>\r\n                <br /><br /><br /><br /><br /><br />\r\n                <div className=\"featured-text text-center\">\r\n                    <p className=\"text-black-50 mb-0 \">Let us to decide for you.</p>\r\n                    <button type=\"button\" className=\"btn btn-primary mx-auto\" style={{backgroundColor: \"#64a19d\", borderColor: \"#64a19d\"}} onClick={this.rtd}>Roll the Dice</button>\r\n                </div>\r\n                <br /><br /><br /><br /><br /><br />\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Homepage;","import React from 'react';\r\nimport * as userService from '../services/userService'\r\nimport \"./Register.css\"\r\nclass Register extends React.Component {\r\nconstructor(props){\r\n    super(props)\r\n    this.state = {\r\n        username: '',\r\n        email: '',\r\n        password: ''\r\n    }\r\n    this.inputChange = this.inputChange.bind(this);\r\n    this.register = this.register.bind(this)\r\n}\r\n\r\ninputChange(e){\r\n    this.setState({\r\n        [e.target.name]: e.target.value\r\n    })\r\n}\r\n\r\nregister(){\r\n    const data = {\r\n        username: this.state.username,\r\n        email: this.state.email,\r\n        password: this.state.password\r\n    }\r\n    userService.register(data)\r\n        .then(console.log)\r\n        .catch(console.log)\r\n}\r\n\r\n\r\nrender(){\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"container\">\r\n                <h2>Register</h2>\r\n                <form className=\"col-sm-12 remove-padding\">\r\n                    <div className=\"col-sm-6 remove-padding\">\r\n                        <label>Username</label>\r\n                        <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.inputChange} className=\"form-control\" />\r\n                    </div>\r\n                    <div className=\"col-sm-6 remove-padding\">\r\n                        <label>Email</label>\r\n                        <input type=\"text\" name=\"email\" value={this.state.email} onChange={this.inputChange} className=\"form-control\" />\r\n                    </div>\r\n                    <div className=\"col-sm-6 remove-padding\">\r\n                        <label>Password</label>\r\n                        <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.inputChange} className=\"form-control\" />\r\n                    </div>\r\n                </form>\r\n                <br></br>\r\n                <button type=\"button\" class=\"btn btn-primary mx-auto\" onClick={this.register}>Register</button>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n}\r\n\r\nexport default Register","import React from 'react';\r\nimport * as userService from '../services/userService'\r\nimport { connect } from 'react-redux'\r\nimport { withCookies } from 'react-cookie'\r\nimport { setUser } from '../actions/index'\r\n\r\nclass Login extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            username: '',\r\n            email: '',\r\n            password: ''\r\n        }\r\n        this.inputChange = this.inputChange.bind(this);\r\n        this.login = this.login.bind(this)\r\n    }\r\n\r\n    inputChange(e){\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    login(){\r\n        const data = {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        }\r\n        userService.login(data)\r\n            .then(() => {\r\n                let user = this.props.cookies.get('myCookie')\r\n                if(user){\r\n                    this.props.setUser(user)\r\n                }\r\n            })\r\n            .then(() => this.props.history.push(\"/search\"))\r\n            .catch(console.log)\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"container\">\r\n                    <h2>Login</h2>\r\n                    <form className=\"col-sm-12 remove-padding\">\r\n                        <div className=\"col-sm-6 remove-padding\">\r\n                            <label>Username</label>\r\n                            <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.inputChange} className=\"form-control\" />\r\n                        </div>\r\n                        <div className=\"col-sm-6 remove-padding\">\r\n                            <label>Password</label>\r\n                            <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.inputChange} className=\"form-control\" />\r\n                        </div>\r\n                    </form>\r\n                    <br></br>\r\n                    <button type=\"button\" className=\"btn btn-primary mx-auto\" onClick={this.login}>login</button>\r\n                </div>\r\n        </React.Fragment>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    setUser: user => dispatch(setUser(user))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(withCookies(Login))","import axios from 'axios'\r\n\r\nfunction register(data){\r\n    let url = \"/api/users/register\"\r\n    const config = {\r\n        method: 'POST',\r\n        data: data\r\n    }\r\n    return axios(url, config)\r\n}\r\n\r\nfunction login(data){\r\n    let url = \"/api/users/login\"\r\n    const config ={\r\n        method: 'POST',\r\n        data: data\r\n    }\r\n    return axios(url, config)\r\n}\r\n\r\nfunction logout(){\r\n    let url = \"/api/users/logout\"\r\n    const config = {\r\n        method: 'GET'\r\n    }\r\n    return axios(url, config)\r\n}\r\n\r\nexport { register, login, logout }","import axios from 'axios';\r\n\r\nfunction getAll(){\r\n    let url = \"/api/settings\"\r\n    const config = {\r\n        method: 'GET'\r\n    }\r\n    return axios(url, config)\r\n        .then(responseSuccessHandler)\r\n        .catch(responseErrorHandler)\r\n}\r\n\r\nfunction create(data){\r\n    let url = \"/api/settings\"\r\n    const config = {\r\n        method: 'POST',\r\n        data: data\r\n    }\r\n    return axios(url, config)\r\n        .then(responseSuccessHandler)\r\n        .catch(responseErrorHandler)\r\n}\r\n\r\nfunction searchById(id){\r\n    let url = \"/api/settings/search/\" + id;\r\n    const config = {\r\n        method: 'GET'\r\n    }\r\n    return axios(url,config)\r\n        .then(responseSuccessHandler)\r\n        .catch(responseErrorHandler)\r\n}\r\n\r\nfunction deleteById(id){\r\n    let url = \"/api/settings/\" + id;\r\n    const config = {\r\n        method: 'DELETE'\r\n    }\r\n    return axios(url, config)\r\n}\r\n\r\nfunction updateById(data){\r\n    let url = \"/api/settings/\" + data.id;\r\n    const config = {\r\n        method: 'PUT',\r\n        data: data\r\n    }\r\n    return axios(url, config)\r\n        .then(responseSuccessHandler)\r\n        .catch(responseErrorHandler)\r\n}\r\n\r\nfunction getById(id){\r\n    let url = \"/api/settings/\" + id;\r\n    const config = {\r\n        method: 'GET'\r\n    }\r\n    return axios(url, config)\r\n        .then(responseSuccessHandler)\r\n        .catch(responseErrorHandler)\r\n}\r\n\r\nexport { getAll, create, searchById, deleteById, updateById, getById }\r\n\r\nfunction responseSuccessHandler(response){\r\n    return response.data\r\n}\r\n\r\nfunction responseErrorHandler(err){\r\n    console.log(err)\r\n}","import React from 'react';\r\nimport { Card, CardTitle, CardText, Button, CardDeck, Badge, ButtonGroup } from 'reactstrap';\r\nimport * as settingsService from '../services/settingsService'\r\n\r\nclass ViewSettings extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            settings: []\r\n        }\r\n        this.rollTheDice = this.rollTheDice.bind(this);\r\n        this.wouldYouRather = this.wouldYouRather.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getAllSettings()\r\n    }\r\n\r\n    getAllSettings(){\r\n        settingsService.getAll()\r\n            .then(response => {\r\n                this.setState({\r\n                    settings: response.items\r\n                })\r\n            })\r\n            .catch(console.log)\r\n    }\r\n\r\n    rollTheDice(id){\r\n        this.props.history.push(\"/rtd/\" + id)\r\n    }\r\n\r\n    wouldYouRather(id){\r\n        this.props.history.push(\"/wyr/\" + id)\r\n    }\r\n\r\n    deleteSetting(id){\r\n        settingsService.deleteById(id)\r\n            .then(() => {this.getAllSettings()})\r\n            .catch(console.error)\r\n    }\r\n\r\n    toForm(id){\r\n        this.props.history.push(\"/search/\" + id)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"container\">\r\n                    <div className=\"col-sm-12\">\r\n                        <CardDeck>\r\n                            {this.state.settings[0] ? this.state.settings.map(item => {\r\n                                let price = JSON.parse(item.price).sort((a, b) => a-b);\r\n                                let dollarSign = price.map((item, index) => (index ? ', ': \"\") + \"$\".repeat(item))\r\n                                return (\r\n                                    <div className=\"col-sm-4\">\r\n                                        <Card body inverse style={{ backgroundColor: '#333', borderColor: '#333', margin: '5px' }}>\r\n                                            {/* <CardTitle>Location: {item.Location}</CardTitle>\r\n                                            <CardSubtitle>Radius: {item.Radius}mi</CardSubtitle> */}\r\n                                            <CardTitle className=\"text-center\">\r\n                                                {item.term}\r\n                                                <a href=\"#\" onClick={e => {this.deleteSetting(item.id)}}><i className=\"fas fa-trash-alt\" style={{color: 'white', position: 'absolute', top: 0, right: 0, padding:'10px'}}></i></a>\r\n                                            </CardTitle>\r\n                                            <CardText>\r\n                                                <span>\r\n                                                    <strong>Location: </strong>\r\n                                                    <br></br>\r\n                                                    {item.location || \"Current Location\"}\r\n                                                </span> \r\n                                               \r\n                                                <br></br>\r\n                                                <span><strong >Open Now: </strong>\r\n                                                    {item.openNow \r\n                                                        ?<Badge color=\"success\">Yes</Badge>\r\n                                                        :<Badge color=\"danger\">No</Badge>\r\n                                                    }\r\n                                                </span>\r\n                                                <br></br>\r\n                                                <span><strong>Price: </strong>{dollarSign}</span>\r\n                                            </CardText>\r\n                                            <ButtonGroup>\r\n                                                <div style={{width: \"100%\"}}>\r\n                                                    <Button className=\"col-sm-4\" outline color=\"info\" onClick={e => {this.rollTheDice(item.id)}}>RTD</Button>\r\n                                                    <Button className=\"col-sm-4\" outline color=\"success\" onClick={e => {this.toForm(item.id)}}>Edit</Button>\r\n                                                    <Button className=\"col-sm-4\" outline color=\"primary\" onClick={e => {this.wouldYouRather(item.id)}}>WYR</Button>\r\n                                                </div>\r\n                                            </ButtonGroup>\r\n                                        </Card>\r\n                                    </div>\r\n                                )})\r\n                                :null\r\n                            }\r\n                        </CardDeck>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewSettings","import axios from \"axios\";\r\n\r\nfunction search(data){\r\n    let url = \"/api/yelp\"\r\n    const config = {\r\n        method: 'POST',\r\n        data: data\r\n    }\r\n    return axios(url, config)\r\n        .then(responseSuccessHandler)\r\n        .catch(responseErrorHandler)\r\n}\r\n\r\nfunction scrape(str){\r\n    let alias = \"https://www.yelp.com/biz/\" + str\r\n    let url = \"/api/yelp/wait\";\r\n    const config = {\r\n        method: 'POST',\r\n        data: {\r\n            value: alias\r\n        }\r\n    }\r\n    return axios(url, config)\r\n        .then(responseSuccessHandler)\r\n        .catch(responseErrorHandler)\r\n}\r\n\r\nfunction responseSuccessHandler(response){\r\n    return response.data\r\n}\r\n\r\nfunction responseErrorHandler(err){\r\n    console.log(err)\r\n}\r\nexport { search, scrape }","export const shuffleResults = (arr) => {\r\n    for (let i = arr.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [arr[i], arr[j]] = [arr[j], arr[i]];\r\n    }\r\n    return arr;\r\n}\r\n\r\nexport const getGeoLocation = (fn) => {\r\n    if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(fn)\r\n    } else {\r\n        alert(\"GeoLocation not available\")\r\n    }\r\n}\r\n\r\nexport const randomNumberOfArr = (arr) => {\r\n    return Math.floor(Math.random() * arr.length)\r\n}","import React from 'react';\r\nimport Rating from 'react-rating'\r\nimport { Card, CardImg, CardText, CardTitle, Badge, Button, Collapse, ListGroup, ListGroupItem } from 'reactstrap'\r\nimport WaitList from './WaitList'\r\n\r\nclass YelpCard extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            collapse: false,\r\n            waitList: [],\r\n            scraped: false\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let distance = Math.round(this.props.result.distance / 1600)\r\n        return (\r\n            <React.Fragment>\r\n                <Card key={this.props.result.id}>\r\n                    <a href={this.props.result.url}>\r\n                        <div style={{height:\"231.762px\", display:'flex', alignItems:'center', overflow:'hidden'}}>\r\n                            <CardImg src={this.props.result.image_url} style={{flex:'none', width:'100%'}}/>\r\n                        </div>\r\n                    </a>\r\n                    <CardTitle className=\"text-center\"><strong>{this.props.result.name}</strong></CardTitle>\r\n                    <CardText className=\"text-center\">\r\n                        <Rating \r\n                            readonly={true}\r\n                            initialRating={this.props.result.rating} \r\n                            emptySymbol={<i className=\"far fa-star\"></i>}\r\n                            fullSymbol={<i className=\"fas fa-star\"></i>}\r\n                            />\r\n                        <br></br>\r\n                        <span className=\"text-center\">{this.props.result.is_closed \r\n                            ?<Badge color=\"danger\" pill>Closed</Badge>\r\n                            :<Badge color=\"success\" pill>Open</Badge>\r\n                        }\r\n                        </span>\r\n                        <br></br>\r\n                        <strong>{`${this.props.result.location.address1}, ${this.props.result.location.city}, ${this.props.result.location.zip_code}`}</strong>\r\n                        <br></br>\r\n                        <strong>{this.props.result.display_phone}</strong>\r\n                    </CardText>\r\n                    <CardText className=\"col-sm-12\">\r\n                        <strong>Distance:</strong> { distance <= 1 ? + distance + \" mile\" : distance + \" miles\"} \r\n                        <br></br>\r\n                        <strong>Price:</strong> {this.props.result.price}\r\n                        <br></br>\r\n                        <strong>Reviews:</strong> {this.props.result.review_count}\r\n                        <br></br>\r\n                        <strong>Categories:</strong> {this.props.result.categories.map((item, index) => {\r\n                            return (index ? ', ': \"\") + item.title\r\n                        })}\r\n                    </CardText>\r\n                </Card>\r\n                {/* <a href={this.props.result.url} style={{textDecoration: 'none'}}>\r\n                    <Button block>Visit Yelp Page</Button>\r\n                </a> */}\r\n                {/* <WaitList alias={this.props.result.alias} /> */}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YelpCard","import React from 'react';\r\nimport { ListGroup, Collapse, ListGroupItem, Button } from 'reactstrap'\r\nimport * as yelpService from '../services/yelpService'\r\n\r\nclass WaitList extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            collapse: false,\r\n            waitList: [],\r\n        }\r\n    }\r\n\r\n    toggleCollapse = str => {\r\n        if(this.state.waitList){\r\n            yelpService.scrape(str)\r\n                .then(response => {\r\n                    this.setState({\r\n                        collapse: true,\r\n                        waitList: response,\r\n                    })\r\n                })\r\n                .catch(console.error)\r\n        } else {\r\n            this.setState(prevState => {\r\n                return {\r\n                    collapse: !prevState.collapse\r\n                }    \r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <Button block onClick={e => {this.toggleCollapse(this.props.alias)}}>View Wait List</Button>\r\n                <Collapse className=\"row\" isOpen={this.state.collapse}>\r\n                    <ListGroup>\r\n                        {this.state.collapse && this.state.waitList.map(item => {\r\n                            return (\r\n                                <ListGroupItem>{item}</ListGroupItem>\r\n                            )\r\n                        })\r\n                        }\r\n                    </ListGroup>\r\n                </Collapse>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WaitList","import React from 'react';\r\nimport * as yelpService from '../services/yelpService'\r\nimport { CardColumns } from 'reactstrap'\r\nimport { shuffleResults } from '../services/resuseableFunctions'\r\nimport YelpCard from './YelpCard';\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport { connect } from 'react-redux'\r\nimport swal from 'sweetalert2'\r\nimport DiceRoll from './DiceRoll';\r\nimport { setLoading } from '../actions/index'\r\n\r\nclass RollTheDice extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            results: [],\r\n            loaded: false\r\n        }\r\n        this.rtd = this.rtd.bind(this);\r\n        this.reroll = this.reroll.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        setLoading(true)\r\n        if(this.props.data.search){\r\n            this.rtd()\r\n        } else {\r\n            this.getGeoLocation();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.data.search !== this.props.data.search){\r\n            this.rtd()\r\n        }\r\n    }\r\n\r\n    getGeoLocation(){\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(this.rtd, function(){\r\n                swal({\r\n                    type: \"error\",\r\n                    title: \"Location not found\",\r\n                    text: \"Make sure you have https:// at the front of the url and allow location access. You can also use the Search functionality instead\"\r\n                })\r\n            })\r\n        } else {\r\n            swal({\r\n                type: \"error\",\r\n                title: \"Location not found\",\r\n                text: \"Make sure you have https:// at the front of the url and allow location access. You can also use the Search functionality instead\"\r\n            })\r\n        }\r\n    }\r\n\r\n    rtd(position){\r\n        let promise;\r\n        let query = {}\r\n        if(this.props.data.search){\r\n            promise = yelpService.search(this.props.data.search)\r\n        } else {\r\n            query = {\r\n                longitude: position.coords.longitude,\r\n                latitude: position.coords.latitude,\r\n                term: \"restaurant\",\r\n                radius: 8046,\r\n                limit: 50,\r\n                open_now: true,\r\n                price: 1\r\n            }\r\n            promise = yelpService.search(query)\r\n        }\r\n        promise\r\n            .then(response => {\r\n                let shuffle = shuffleResults(response.businesses)\r\n                let three = shuffle.slice(0,3)\r\n                this.setState({\r\n                    results: three,\r\n                    loaded: true\r\n                })\r\n                setLoading(false)\r\n            })\r\n            .catch(console.log)\r\n    }\r\n\r\n    reroll(){\r\n        setLoading(true)\r\n        if(this.props.data.search){\r\n            this.rtd()\r\n        } else {\r\n            this.getGeoLocation();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const headerText = {\r\n            // fontFamily: \"Varela Round\",\r\n            fontWeight: \"700\",\r\n            fontSize: \"2.5rem\",\r\n            lineHeight: \"2.5rem\"\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {/* <DiceRoll /> */}\r\n                <div>\r\n                    <div className=\"row\" style={{pointerEvents: \"none\"}}>\r\n                        <div className=\"container mb-2\">\r\n                            {/* <h1 className=\"text-center\" style={headerText}>Roll The Dice</h1> */}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"container\">\r\n                        <CardColumns>\r\n                            {this.state.results[0] && this.state.results.map(item => {\r\n                                return (\r\n                                    <CSSTransition \r\n                                        key={item.id} \r\n                                        in={true}\r\n                                        appear={true}\r\n                                        timeout={1000}\r\n                                        classNames=\"fade-card\"\r\n                                    >\r\n                                        <React.Fragment>\r\n                                            <YelpCard result={item} />\r\n                                        </React.Fragment>\r\n                                    </CSSTransition>\r\n                                )\r\n                            })}\r\n                        </CardColumns>\r\n                        {/* <Collapse className=\"row\" isOpen={this.state.collapse}>\r\n                            <ListGroup>\r\n                                {this.state.collapse && this.state.waitList.map(item => {\r\n                                    return (\r\n                                        <ListGroupItem>{item}</ListGroupItem>\r\n                                    )\r\n                                })\r\n                                }\r\n                            </ListGroup>\r\n                        </Collapse> */}\r\n                        {this.state.loaded ? <button type=\"button\" className=\"btn btn-secondary btn-block mx-auto\" style={{backgroundColor: \"rgb(100, 161, 157)\", borderColor: \"rgb(100, 161, 157)\"}} onClick={e => {this.reroll()}}>Reroll</button> : null}\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state.search\r\n})\r\n\r\nexport default connect(mapStateToProps)(RollTheDice)","import React from 'react';\r\nimport dice from \"../diceroll.gif\"\r\n\r\nclass DiceRoll extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = { \r\n\r\n        }\r\n    }\r\n    render(){\r\n        const backgroundStyling = {\r\n            height: \"100VH\", \r\n            width: \"100VW\", \r\n            backgroundColor: \"black\",\r\n            zIndex: \"2000\",\r\n            position: \"absolute\",\r\n            justifyContent: \"center\"\r\n        }\r\n\r\n        const diceStyle = {\r\n            textAlign: \"center\",\r\n            display: \"block\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            height: \"auto\",\r\n            width: \"20%\",\r\n            paddingTop: \"100px\"\r\n        }\r\n\r\n        const textStyle = {\r\n            color: \"white\",\r\n            textAlign: \"center\"\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div style={backgroundStyling}>\r\n                    <img style={diceStyle} src={dice} alt=\"dice roll\" />\r\n                    <h3 style={textStyle} >Generating...</h3>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DiceRoll","import React from 'react';\r\nimport * as settingsService from '../services/settingsService'\r\nimport * as yelpService from '../services/yelpService'\r\nimport { shuffleResults } from '../services/resuseableFunctions'\r\nimport YelpCard from './YelpCard';\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport { connect } from 'react-redux'\r\nimport \"./WouldYouRather.css\"\r\nimport swal from 'sweetalert2'\r\nimport { Alert } from 'reactstrap'\r\n\r\nclass WouldYouRather extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            show: true,\r\n            loaded: false,\r\n            results: [],\r\n            first: '',\r\n            second: '',\r\n            index: 1,\r\n            maxResults: '',\r\n            collapse: false,\r\n            waitList: []\r\n        }\r\n        this.wyr = this.wyr.bind(this)\r\n        this.select = this.select.bind(this);\r\n        this.toggleCollapse = this.toggleCollapse.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.data.search){\r\n            this.wyr()\r\n        } else {\r\n            this.getGeoLocation(this.wyr)\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.data.search !== this.props.data.search){\r\n            this.wyr()\r\n        }\r\n    }\r\n\r\n    getGeoLocation(){\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(this.wyr, function(){\r\n                swal({\r\n                    type: \"error\",\r\n                    title: \"Location not found\",\r\n                    text: \"Make sure you have https:// at the front of the url and allow location access. You can also use the Search functionality instead\"\r\n                })\r\n            })\r\n        } else {\r\n            swal({\r\n                type: \"error\",\r\n                title: \"Location not found\",\r\n                text: \"Make sure you have https:// at the front of the url and allow location access. You can also use the Search functionality instead\"\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    wyr(position){\r\n        let promise;\r\n        let query = {}\r\n        if(this.props.data.search){\r\n            promise = yelpService.search(this.props.data.search)\r\n        } else {\r\n            query = {\r\n                longitude: position.coords.longitude,\r\n                latitude: position.coords.latitude,\r\n                term: \"restaurant\",\r\n                radius: 8046,\r\n                limit: 50,\r\n                open_now: true,\r\n                price: 1\r\n            }\r\n            promise = yelpService.search(query)\r\n        }\r\n        promise\r\n            .then(response => {\r\n                let businesses = response.businesses \r\n                if(businesses.length < 2){\r\n                    swal({\r\n                        type: \"error\",\r\n                        title: \"Not Enough Businesses Found\"\r\n                    })\r\n                    } else {\r\n                        let shuffle = shuffleResults(response.businesses)\r\n                        let maxResults = response.businesses.length-1\r\n                        let arrOne = [shuffle[0]]\r\n                    let arrTwo = [shuffle[1]]\r\n                    this.setState({\r\n                        results: shuffle,\r\n                        first: arrOne,\r\n                        second: arrTwo,\r\n                        maxResults: maxResults,\r\n                        loaded: true\r\n                    })\r\n                }\r\n            })\r\n            .catch(console.log)\r\n    }\r\n\r\n    select(num){\r\n        if(this.state.index <= 5){\r\n            let { results } = this.state\r\n            let index = this.state.index + 1\r\n            if(this.state.maxResults > index){\r\n                let newResult = [results[index]]\r\n                switch(num){\r\n                    case 1:\r\n                        this.setState({\r\n                            second: newResult,\r\n                            index: index,\r\n                        })\r\n                        break;\r\n                    case 2:\r\n                        this.setState({\r\n                            first: newResult,\r\n                            index: index,\r\n                        })\r\n                        break;\r\n                    default:\r\n                        console.log(\"error\")\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleCollapse = str => {\r\n        if(this.state.waitList){\r\n            yelpService.scrape(str)\r\n                .then(response => {\r\n                    this.setState({\r\n                        collapse: true,\r\n                        waitList: response.data,\r\n                    })\r\n                })\r\n                .catch(console.error)\r\n        } else {\r\n            this.setState(prevState => {\r\n                return {\r\n                    collapse: !prevState.collapse\r\n                }    \r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const headerText = {\r\n            fontFamily: \"Roboto\",\r\n            fontWeight: \"700\",\r\n            fontSize: \"2.5rem\",\r\n            lineHeight: \"2.5rem\"\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.showAlert ? <Alert isOpen={this.state.showAlert} /> : null}\r\n                <div className=\"row\">\r\n                    <div className=\"container text-center\" style={headerText}>\r\n                        {/* <h1 style={headerText}>Would You Rather</h1> */}\r\n                        {this.state.loaded ? <h1>{this.state.index < 6 ? `Round ${this.state.index}` : \"Final\"}</h1> : null}\r\n                    </div>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-6\">\r\n                            {this.state.first && this.state.first.map(item => {\r\n                                return (\r\n                                    <React.Fragment key={item.id} >\r\n                                        <CSSTransition \r\n                                            in={true}\r\n                                            appear={true}\r\n                                            timeout={800}\r\n                                            classNames=\"fade-card\"\r\n                                        >\r\n                                            <YelpCard result={item}/>\r\n                                        </CSSTransition>\r\n                                        <button type=\"button\" className=\"btn btn-secondary btn-block mx-auto\" style={{backgroundColor: \"rgb(100, 161, 157)\", borderColor: \"rgb(100, 161, 157)\"}} onClick={e => {this.select(1)}} >Select</button>\r\n                                    </React.Fragment>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        <div className=\"col-sm-6\">\r\n                            {this.state.second && this.state.second.map(item => {\r\n                                return (\r\n                                    <React.Fragment key={item.id} >\r\n                                        <CSSTransition \r\n                                            in={true}\r\n                                            appear={true}\r\n                                            timeout={800}\r\n                                            classNames=\"fade-card\"\r\n                                        >\r\n                                            <YelpCard result={item} />\r\n                                        </CSSTransition>\r\n                                        <button type=\"button\" className=\"btn btn-secondary btn-block mx-auto\" style={{backgroundColor: \"rgb(100, 161, 157)\", borderColor: \"rgb(100, 161, 157)\"}} onClick={e => {this.select(2)}}>Select</button>\r\n                                    </React.Fragment>\r\n                                    )\r\n                                })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state.search\r\n})\r\n\r\nexport default connect(mapStateToProps)(WouldYouRather)","import React from 'react';\r\nimport { Button } from 'reactstrap'\r\nimport SettingsForm from './SettingsForm'\r\n\r\nclass HelpPage extends React.Component {\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                {this.props.match.params.type === \"wyr\" ? \r\n                (\r\n                    <div className=\"container\">\r\n                        <div className=\"card\">\r\n                            <div className=\"container text-center mb-4 mt-4\">\r\n                                <h3>Would You Rather</h3>\r\n                                {/* <h6>As default, we will give you two random options.</h6>\r\n                                <h6>Choose the option you prefer, and after 5 rounds there will be your final two options for you to choose from</h6>\r\n                                <h6 className=\"mb-3\">You can also define your search by adding parameters</h6> */}\r\n                                <Button type=\"button\" className=\"mx-auto\" onClick={e => {this.props.history.push(\"/wyr\")}}>Decide For Me</Button>\r\n                                <Button type=\"button\" className=\"ml-4\">Let Me Search</Button> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"container\">\r\n                        <div className=\"card\">\r\n                            <div className=\"container text-center mb-4 mt-4\">\r\n                                <h3>Roll The Dice</h3>\r\n                                {/* <h6>3 randomly generated options</h6>\r\n                                <h6>You may also define your own search query</h6>\r\n                                <h6 className=\"mb-3\">You can also define your search by adding parameters</h6> */}\r\n                                <Button type=\"button\" className=\"mx-auto\" onClick={e => {this.props.history.push(\"/rtd\")}}>Decide For Me</Button>\r\n                                <Button type=\"button\" className=\"ml-4\">Let Me Search</Button> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HelpPage","import React from 'react'\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { withRouter } from 'react-router-dom'\r\nimport Register from '../components/Register'\r\nimport Homepage from './Homepage'\r\nimport Login from \"../components/Login\";\r\nimport ViewSettings from \"../components/ViewSettings\";\r\nimport Search from '../components/SettingsForm';\r\nimport RollTheDice from \"../components/RollTheDice\";\r\nimport WouldYouRather from '../components/WouldYouRather'\r\nimport HelpPage from '../components/HelpPage';\r\n\r\nclass ContentRouter extends React.Component {\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                {/* <TransitionGroup className=\"transition-group\"> */}\r\n                    {/* <CSSTransition\r\n                        key={this.props.location.key}\r\n                        timeout={{ enter: 300, exit: 300 }}\r\n                        classNames=\"fade\"\r\n                    >\r\n                        <section className=\"route-section\"> */}\r\n                            <Switch>\r\n                                {/* <Route path=\"/\">Home */}\r\n                                {/* <Route path=\"/other\">Other */}\r\n                                <Route path=\"/\" exact component={Homepage} />\r\n                                {/* <Route path=\"/register\" component={Register} />\r\n                                <Route path=\"/login\" component={Login} />\r\n                                <Route path=\"/settings\" component={ViewSettings} /> */}\r\n                                <Route path=\"/help/:type?\" component={HelpPage} />\r\n                                <Route path=\"/search/:id?\" component={Search} />\r\n                                <Route path=\"/rtd/:id?\" component={RollTheDice} />\r\n                                <Route path=\"/wyr/:id?\" component={WouldYouRather} />\r\n                            </Switch>\r\n                        {/* </section>\r\n                    </CSSTransition> */}\r\n                {/* </TransitionGroup> */}\r\n            </React.Fragment>\r\n        )   \r\n    }\r\n}\r\n\r\nexport default withRouter(ContentRouter)","import React from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nclass ActiveSearch extends React.Component {\r\n    render(){\r\n        const setting = this.props.data.search\r\n        let location;\r\n        let price;\r\n        if(setting){\r\n            if(setting.currentLocation){\r\n                location = \"Current Location\"\r\n            } else {\r\n                location = setting.location;\r\n            }\r\n            if(setting.price){\r\n                let priceArr = JSON.parse(setting.price)\r\n                for(let i=0; i<priceArr.length; i++){\r\n                    debugger\r\n                    if(i === priceArr.length){\r\n                        price.append(\"$\".repeat(setting.price[i]))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        let render = this.props.data.search ? (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <p className=\"col-sm-2 offset-md-1\">Term: {setting.term}</p>\r\n                    {/* <p>{location}</p> */}\r\n                    <p className=\"col-sm-2\">Location: {location}</p>\r\n                    <p className=\"col-sm-2\">Open Now: {setting.openNow.toString()}</p>\r\n                    <p className=\"col-sm-2\">Price: {price}</p>\r\n                    <p className=\"col-sm-2\">Radius: {Math.round(setting.radius / 1609) + \" miles\"}</p>\r\n                </div>\r\n            </div>\r\n        ) : (\r\n            <div></div>\r\n        )\r\n        return (\r\n            <React.Fragment>\r\n                {render}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapsStateToProps = state => ({\r\n    data: state.search\r\n})\r\n\r\nexport default connect(mapsStateToProps)(ActiveSearch)","import React from 'react';\r\nimport Nav from './Nav'\r\nimport ContentRouter from './ContentRouter'\r\nimport { withRouter } from 'react-router-dom'\r\nimport ActiveSearch from '../components/ActiveSearch'\r\nimport { connect } from 'react-redux'\r\nimport DiceRoll from '../components/DiceRoll';\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\nclass Layout extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            loading: true\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                {/* {this.props.loading ? \r\n                    <CSSTransition\r\n                        // in={true}\r\n                        // appear={true}\r\n                        timeout={1000}\r\n                        classNames=\"fade-card\"\r\n                    >\r\n                        <DiceRoll /> \r\n                    </CSSTransition>\r\n                : null} */}\r\n                <React.Fragment>\r\n                    <Nav />\r\n                    <ContentRouter />\r\n                </React.Fragment>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loading: state.loading\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps)(Layout))","import React from 'react';\r\nimport { withCookies } from 'react-cookie'\r\nimport Layout from './Layout';\r\nimport { connect } from 'react-redux'\r\nimport { setUser } from '../actions'\r\n\r\n\r\nclass CookieCheck extends React.Component {\r\n    componentDidMount(){\r\n        let { cookies } = this.props\r\n        let user = cookies.get('myCookie')\r\n        if(user){\r\n            this.props.setUser(user)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <Layout />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setUser: user => dispatch(setUser(user))\r\n})\r\n\r\nexport default withCookies(connect(null, mapDispatchToProps)(CookieCheck));","const currentUser = (state = {}, action) => {\r\n    switch(action.type){\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                user: action.user\r\n            }        \r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default currentUser","const loading = (state = {}, action) => {\r\n    switch(action.type){\r\n        case \"SET_LOADING\":\r\n            return {\r\n                ...state,\r\n                user: action.loading\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default loading","const search = (state = {}, action) => {\r\n    switch(action.type){\r\n        case 'SET_SEARCH':\r\n            return {\r\n                ...state,\r\n                search: action.search\r\n            }\r\n            default: \r\n                return state\r\n    }\r\n} \r\n\r\nexport default search","import { combineReducers } from 'redux'\r\nimport currentUser from './currentUser'\r\nimport loading from './loading'\r\nimport search from './search'\r\n\r\nconst appReducer = combineReducers({\r\n    currentUser,\r\n    search,\r\n    loading\r\n})\r\n\r\nconst rootReducer = (state, action) => {\r\n    if(action.type === \"USER_LOGOUT\"){\r\n        state = undefined\r\n    }\r\n    return appReducer(state, action);\r\n}\r\n\r\nexport default rootReducer","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { CookiesProvider } from 'react-cookie'\r\nimport CookieCheck from './layout/CookieCheck';\r\nimport rootReducer from './reducers'\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\n\r\nconst store = createStore(\r\n\trootReducer,\r\n\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n\t\t\t<Provider store={store}>\r\n\t\t\t\t<BrowserRouter>\r\n\t\t\t\t\t<CookiesProvider>\r\n\t\t\t\t\t\t<CookieCheck />\r\n\t\t\t\t\t</CookiesProvider>\r\n\t\t\t\t</BrowserRouter>\r\n\t\t\t</Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}